h1. Rustici SCORM Cloud Ruby Client

bc. Let me know if you are interested in taking it over. I developed the code but never
actually used it in production. Use with caution.

This ruby gem is provides a ruby interface to the Rustici Scorm Cloud.

h2. Shell CLI Interface

$ gem install 'scorm_cloud'
$ scorm_cloud rustici.course.getCourseList --appid myappid --secret mysecret

h2. Standard Ruby Use

bc. require 'scorm_cloud'
sc = ScormCloud::ScormCloud.new("my_app_id","my_secret_key")
sc.course.get_course_list.each { |c| puts "#{c.id} #{c.title}"}

If you need to change the API URL to utilize the LocalWS engine (for example)
then pass the API override URL as the third parameter to #initializer

bc. require 'scorm_cloud'
sc = ScormCloud::ScormCloud.new("my_app_id","my_secret_key","api_override_url")
sc.course.get_course_list.each { |c| puts "#{c.id} #{c.title}"}

If you do not pass a third parameter then the default will be used

bc. http://cloud.scorm.com/api

h2. Ruby on Rails Use

_Place the following in: Gemfile_

bc. require 'scorm_cloud', :git => 'git@github.com:aeseducation/scorm-cloud.git'

_Place the following in: config/initializers/scorm_cloud.rb_

bc. # Change MyApplication to the name of your application
MyApplication::Application.configure do |config|
	config.scorm_cloud.appid = "my_app_id"
	config.scorm_cloud.secretkey = "my_secret_key"
end

Optionally you can configure the API URL override using

bc. config.scorm_cloud.api_url = "api_override_url"

_Place the following in: /app/controllers.course_controller.rb_

bc. # app/controllers/course_controller.rb
class CourseController < ApplicationController
	def index
		@courses = scorm_cloud.course.get_course_list
	end
	def launch
		return_url = course_index_url
		reg = scorm_cloud.registrations.create_registration(...)
		redirect_to scorm_cloud.registrations.launch(...)
	end
end

_Place the following in: /app/views/course/index.html.erb_

bq. # app/views/course/index.html.erb
&lt;ul&gt;
&lt;%= @courses.each |course| %&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;%= link_to course_launch_path(course.title,course.id) %&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;
&lt;% end %&gt;
&lt;/ul&gt;
